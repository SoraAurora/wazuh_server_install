- name: Check if Wazuh server is already installed
  stat:
    path: /etc/wazuh-indexer
  register: wazuh_installed

- name: Install Wazuh prerequisites
  package:
    name: "{{ package }}"
    state: latest
  loop: 
    - ca-certificates
    - git
  loop_control:
    loop_var: package
  when: not wazuh_installed.stat.exists 

- name: Download Wazuh installation script
  get_url:
    url: "{{ wazuh_install_script_url }}"
    dest: /tmp/wazuh-install.sh
  when: not wazuh_installed.stat.exists 

- name: Run Wazuh installation script
  shell: sudo bash /tmp/wazuh-install.sh -a -i > /tmp/wazuh-install-output.txt
  when: not wazuh_installed.stat.exists 

- name: Start Wazuh Manager service
  service:
    name: wazuh-manager
    state: started
    enabled: yes

- name: Download SOCFORTRESS Wazuh rules script
  copy:
    src: wazuh_socfortress_rules.sh
    dest: /tmp/wazuh_socfortress_rules.sh
    mode: "0755"  # Ensure the script is executable
  when: not wazuh_installed.stat.exists 

- name: Run SOCFORTRESS Wazuh rules script
  shell: sudo bash /tmp/wazuh_socfortress_rules.sh
  when: not wazuh_installed.stat.exists 

- name: Extract username and password
  shell: "grep -E 'User:|Password:' /tmp/wazuh-install-output.txt | awk '{print $NF}'"
  register: access_info
  when: not wazuh_installed.stat.exists and not wazuh_admin_password is defined

- name: Display username and password
  ansible.builtin.debug:
    msg:
      - "Username: {{ access_info.stdout_lines[0] }}"
      - "Password: {{ access_info.stdout_lines[1] }}"
  when: not wazuh_installed.stat.exists and not wazuh_admin_password is defined

- name: Change admin password
  ansible.builtin.command: "/usr/share/wazuh-indexer/plugins/opensearch-security/tools/wazuh-passwords-tool.sh -u admin -p '{{ wazuh_admin_password }}'"
  when: wazuh_admin_password is defined  